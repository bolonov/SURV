
&НаКлиенте
Процедура ОтборПоОфисуПриИзменении(Элемент)
	ИзменитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоСотрудникуПриИзменении(Элемент)
	ИзменитьОтбор();
КонецПроцедуры

&НаСервере
Процедура ИзменитьОтбор()
	ТекстЗапроса = ИсходныйЗапрос;//ЭтаФорма.Список.ТекстЗапроса;
	ПараметрыЗапроса = Новый Структура;
	Если ЗначениеЗаполнено(ЭтаФорма.ОтборПоОфису) Тогда 
		ТекстЗапроса = ТекстЗапроса + " 
		|	И УчетРабочегоВремениСрезПоследних.Офис = &Офис";
		ПараметрыЗапроса.Вставить("Офис",ЭтаФорма.ОтборПоОфису);
	КонецЕсли;
	Если ЗначениеЗаполнено(ЭтаФорма.ОтборПоСотруднику) Тогда 
		ТекстЗапроса = ТекстЗапроса + " 
		|	И УчетРабочегоВремениСрезПоследних.Пользователь = &Пользователь";
		ПараметрыЗапроса.Вставить("Пользователь",ЭтаФорма.ОтборПоСотруднику);
	КонецЕсли;
	Если Элементы.ТолькоСотрудники.Пометка Тогда 
		ТекстЗапроса = ТекстЗапроса + " 
		|	И УчетРабочегоВремениСрезПоследних.Пользователь.Email ПОДОБНО ""%@%""";
		//ПараметрыЗапроса.Вставить("ТолькоСотрудники",Истина);
	КонецЕсли;
	УстановитьЗапросСписка(ТекстЗапроса,ПараметрыЗапроса);	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ИсходныйЗапрос = ПолучитьЗапросСписка();
	ИзменитьОтбор();
КонецПроцедуры

&НаСервере
Функция ПолучитьЗапросСписка()
	Возврат Список.ТекстЗапроса;	
КонецФункции

&НаСервере
Процедура УстановитьЗапросСписка(ТекстЗапроса,ПараметрыЗапроса = Неопределено)
	Если ПараметрыЗапроса <> Неопределено Тогда 
		Для Каждого Эл Из ПараметрыЗапроса Цикл 
			Список.Параметры.УстановитьЗначениеПараметра(Эл.Ключ,Эл.Значение);
		КонецЦикла;
	КонецЕсли;
	Если Список.Группировка.Элементы.Количество() > 0 Тогда 
		Список.Группировка.Элементы[1].Использование = Элементы.ПоОтделам.Пометка;//группировка Отдел = 1
	КонецЕсли;
	Список.ТекстЗапроса = ТекстЗапроса;	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Список.Параметры.УстановитьЗначениеПараметра("ТекущаяДата", ПараметрыСеанса.ТекущаяДата);                
	Список.Параметры.УстановитьЗначениеПараметра("ТекущийОфис", ПараметрыСеанса.ТекущийОфис);                
	Список.Параметры.УстановитьЗначениеПараметра("Офис", Справочники.Офисы.ПустаяСсылка());                
	Список.Параметры.УстановитьЗначениеПараметра("Пользователь", Справочники.Пользователи.ПустаяСсылка());                
	Элементы.Список.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;//.НеРаскрывать;
	ЭтаФорма.ОтборПоОфису = ПараметрыСеанса.ТекущийОфис;
	ПроверитьУстановитьСмещениеВремениДляофиса();
КонецПроцедуры

&НаСервере
Процедура ПроверитьУстановитьСмещениеВремениДляофиса()
	ТекОфис = ПараметрыСеанса.ТекущийОфис;
	Если ЗначениеЗаполнено(ТекОфис) Тогда 
		РазностьВремени = Час(ВернутьТекущуюДатуСеанса())-Час(ТекущаяДата());
		Если РазностьВремени <> 0 Тогда 
			Если ТекОфис.ОтклонениеВремениВЧасах <> РазностьВремени Тогда 
				УстановитьПривилегированныйРежим(Истина);
				Об = ТекОфис.ПолучитьОбъект();
				Об.ОтклонениеВремениВЧасах = РазностьВремени;
				Об.Записать();
				УстановитьПривилегированныйРежим(Ложь);
			КонецЕсли;
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	////Если Элементы.Список.Развернут(Элементы.Список.ТекущаяСтрока) Тогда
	////	Элементы.Список.Свернуть(Элементы.Список.ТекущаяСтрока);
	////Иначе
	////    Элементы.Список.Развернуть(Элементы.Список.ТекущаяСтрока);
	////КонецЕсли;
	//ТекСтрока = Элементы.Список.ТекущаяСтрока;
	//Если ТекСтрока <> Неопределено Тогда 
	//	Элементы.Список.Развернуть(ТекСтрока);
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтработанноеВремя(Команда)
	ОткрытьФорму("Отчет.ОтработанноеВремя.Форма");
КонецПроцедуры

&НаКлиенте
Процедура ПоОтделам(Команда)
	Элементы.ПоОтделам.Пометка = Не Элементы.ПоОтделам.Пометка;
	ИзменитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ОшибкиУчета(Команда)
	ОткрытьФорму("Отчет.ОшибкиУчетаРабочегоВремени.Форма");
КонецПроцедуры

&НаКлиенте
Процедура ТолькоСотрудники(Команда)
	Элементы.ТолькоСотрудники.Пометка = Не Элементы.ТолькоСотрудники.Пометка;
	ИзменитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ИсторияПоСотруднику(Команда)
	ТекПользователь = ПолучитьТекПользователя();
	Если ТекПользователь <> Неопределено Тогда 
		ОткрытьФорму("РегистрСведений.УчетРабочегоВремени.Форма.ФормаИсторияЗаПериод",Новый Структура("ОтборПоПользователю",ТекПользователь));
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьТекПользователя()
	ТекСтрока = Элементы.Список.ТекущаяСтрока;
	Если ТекСтрока <> Неопределено Тогда
		СписокРеквизитов = Новый СписокЗначений;
		СписокРеквизитов.Добавить("Ссылка");
		СписокРеквизитов.Добавить("Пользователь");
		Для Каждого Эл Из СписокРеквизитов Цикл 
			Попытка
				Возврат ТекСтрока[эл.Значение];	
			Исключение
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

&НаКлиенте
Процедура Обновить(Команда)
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура Тест(Команда)
	Сообщить(ВернутьТекущуюДатуСеанса());
	Сообщить(ТекущаяДата());
КонецПроцедуры

&НаСервере
Функция ВернутьТекущуюДатуСеанса()
	Возврат ТекущаяДатаСеанса();
КонецФункции

&НаКлиенте
Процедура ЗаявкиНаОтсутствие(Команда)
	ОткрытьФорму("Отчет.ЗаявкиОбОтсутствии.Форма");
КонецПроцедуры
