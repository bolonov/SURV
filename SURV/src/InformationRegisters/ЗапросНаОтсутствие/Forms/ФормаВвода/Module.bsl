
&НаСервере
Процедура УстановитьВидимостьПериода()
	Вариант = ВернутьВариантПоказаДаты();
	Элементы.ПериодНачала_Дата.Доступность = Истина;//(Вариант = 1 Или Вариант = 0);
	Элементы.ПериодНачала_Время.Доступность = (Вариант = 2 Или Вариант = 0);
	Элементы.ПериодОкончания_Дата.Доступность = (Вариант = 1 Или Вариант = 0);
	Элементы.ПериодОкончания_Время.Доступность = (Вариант = 2 Или Вариант = 0);
КонецПроцедуры

&НаСервере
Функция ВернутьВариантПоказаДаты()
	Если Запись.ВидОтсутствия = Перечисления.ВидыВремени.Командировка
		Или Запись.ВидОтсутствия = Перечисления.ВидыВремени.Отпуск
		Или Запись.ВидОтсутствия = Перечисления.ВидыВремени.ОтпускБезСохраненияЗП
		Или Запись.ВидОтсутствия = Перечисления.ВидыВремени.Болезнь
		Или Запись.ВидОтсутствия = Перечисления.ВидыВремени.Учеба 
		Или Запись.ВидОтсутствия = Перечисления.ВидыВремени.ДополнительныйВыходной Тогда //просто 2 даты без времени
		Возврат 1;		
	ИначеЕсли Запись.ВидОтсутствия = Перечисления.ВидыВремени.УчестьВсеВремяКакРабочее
		Или Запись.ВидОтсутствия = Перечисления.ВидыВремени.МестнаяКомандировка
		Или Запись.ВидОтсутствия = Перечисления.ВидыВремени.Личное Тогда //одна дата и 2 времени
		Возврат 2;
	Иначе
		Возврат 0;
	КонецЕсли;			
КонецФункции

&НаСервере
Процедура УстановитьВидимостьДоступность()
	Элементы.Период.Видимость = Сервер.ЕстьПрава("ПолныеПрава");	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//Если Параметры.Свойство("РежимПросмотр") Тогда 
	//	ЭтаФорма.ТолькоПросмотр = Параметры.РежимПросмотр;
	//КонецЕсли;
	//Если Параметры.Свойство("РежимСоздание") Тогда 
	//	Элементы.Пользователь.Видимость = Не Параметры.РежимСоздание;
	//	Элементы.Статус.Видимость = Не Параметры.РежимСоздание;
	//КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
	ЗаполнитьСписокПодписантов();
	
	ЗаполнитьСписокВидовВремени();
	
	ВидОтсутствияПриИзменении(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокВидовВремени()
	СписокВрем = ПолучитьСписокВидовВремени();
	Если СписокВрем.Количество() > 0 Тогда 
		Элементы.ВидОтсутствия.РежимВыбораИзСписка = Истина;
		Элементы.ВидОтсутствия.СписокВыбора.ЗагрузитьЗначения(СписокВрем.ВыгрузитьЗначения());
		//Запись.ВидОтсутствия = СписокВрем.Получить(0).Значение;
	КонецЕсли;	
КонецПроцедуры

&НаСервереБезКонтекста 
Функция ПолучитьСписокВидовВремени()
	
	СписокВидовВремени = Новый СписокЗначений;
	
	Для Каждого ЭлМет Из Метаданные.Перечисления.ВидыВремени.ЗначенияПеречисления Цикл 
		Если ЭлМет.Имя <> "ЗарегистрированоПоКарте" Тогда 
			СписокВидовВремени.Добавить(Перечисления.ВидыВремени[ЭлМет.Имя],ЭлМет.Синоним);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокВидовВремени;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьСписокПодписантов()
	СписокПодп = ПолучитьСписокПодписантов();
	Если СписокПодп.Количество() > 0 Тогда 
		Элементы.ПользовательПодписант.РежимВыбораИзСписка = Истина;
		Элементы.ПользовательПодписант.СписокВыбора.ЗагрузитьЗначения(СписокПодп.ВыгрузитьЗначения());
		//Запись.ПользовательПодписант = СписокПодп.Получить(0).Значение;
	КонецЕсли;	
КонецПроцедуры

//&НаСервереБезКонтекста
//Процедура ДобавитьКСпискуЗначений(ИсхСписок,ДобСписок)
//	Для Каждого Эл Из ДобСписок Цикл 
//		Если ИсхСписок.НайтиПоЗначению(Эл) = Неопределено Тогда 
//			ИсхСписок.Добавить(Эл);
//		КонецЕсли;		
//	КонецЦикла;
//КонецПроцедуры
 
&НаСервере
Функция ПолучитьСписокПодписантов()
	
	СписокПодписантов = Новый СписокЗначений;
	
	ТекПольз = ПараметрыСеанса.ТекущийПользователь;
	
	//проверим может ли сам подписывать!
	//Если ПервоеОткрытиеФормы Тогда 
	Если Не ЗначениеЗаполнено(ТекПольз.Родитель) Тогда 
		СписокПодписантов.Добавить(ТекПольз);
	Иначе
		Выборка = РегистрыСведений.СотрудникиСПравомУтвержденияСобственныхЗаявок.Выбрать(Новый Структура("Пользователь",ТекПольз));
		Если Выборка.Следующий() Тогда 
			//СписокСамоПодписантов.Добавить(ТекПольз);
			СписокПодписантов.Добавить(ТекПольз);
		КонецЕсли;
	КонецЕсли;
	//КонецЕсли;
	//Если СписокСамоПодписантов.Количество() > 0 Тогда 
	//	ДобавитьКСпискуЗначений(СписокПодписантов,СписокСамоПодписантов);
	//КонецЕсли;
	
	//добавим иерархию начальства
	//Если ПервоеОткрытиеФормы Тогда
		КопияТекПольз = ТекПольз;
		Для х = 1 По 2 Цикл 
			Если ЗначениеЗаполнено(КопияТекПольз.Родитель) Тогда 
				//СписокНачальниковПодписантов.Добавить(ТекПольз.Родитель);
				СписокПодписантов.Добавить(КопияТекПольз.Родитель);
			КонецЕсли;
			КопияТекПольз = КопияТекПольз.Родитель;
		КонецЦикла;
	//КонецЕсли;
	//Если СписокНачальниковПодписантов.Количество() > 0 Тогда 
	//	ДобавитьКСпискуЗначений(СписокПодписантов,СписокНачальниковПодписантов);
	//КонецЕсли;
	
	//добавим кадровиков с правом утверждения заявок
	//Если ПервоеОткрытиеФормы Тогда
	Если Запись.ВидОтсутствия = Перечисления.ВидыВремени.Отпуск 
		Или Запись.ВидОтсутствия = Перечисления.ВидыВремени.ОтпускБезСохраненияЗП
		Или Запись.ВидОтсутствия = Перечисления.ВидыВремени.ДополнительныйВыходной
		Или Запись.ВидОтсутствия = Перечисления.ВидыВремени.Болезнь
		Или Запись.ВидОтсутствия = Перечисления.ВидыВремени.Командировка Тогда
		УстановитьПривилегированныйРежим(Истина);
		МассивПользователейИБ = ПользователиИнформационнойБазы.ПолучитьПользователей();
		Для Каждого ЭлМас Из МассивПользователейИБ Цикл 
			Если ЭлМас.Роли.Содержит(Метаданные.Роли.ПравоПодтвержденияЗаявок) Тогда 
				НайдЭл = сервер.НайтиПользователяПоРеквизиту("ПользовательИБ",ЭлМас.УникальныйИдентификатор);
				Если ЗначениеЗаполнено(НайдЭл) 
					И НайдЭл <> ТекПольз
					И (НайдЭл.Домен = ТекПольз.Домен
						Или (ЗначениеЗаполнено(ТекПольз.Офис) И НайдЭл.Офис = ТекПольз.Офис)) Тогда 
					//СписокКадровиковПодписантов.Добавить(НайдЭл);
					СписокПодписантов.Добавить(НайдЭл);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	//КонецЕсли;
	//Если Запись.ВидОтсутствия = Перечисления.ВидыВремени.Отпуск Тогда
	//	ДобавитьКСпискуЗначений(СписокПодписантов,СписокКадровиковПодписантов);
	//КонецЕсли;
	
	Возврат СписокПодписантов;
	
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Элементы.ПериодНачала_Время.Доступность И НачалоДня(Запись.ПериодНачала) = Запись.ПериодНачала Тогда 
		//Предупреждение("Укажите время для Даты начала!",2);
		Сообщить("Укажите время для Даты начала!",2);
		Отказ = Истина;
	ИначеЕсли Элементы.ПериодОкончания_Время.Доступность И НачалоДня(Запись.ПериодОкончания) = Запись.ПериодОкончания Тогда 
		//Предупреждение("Укажите время для Даты окончания!",2);
		Сообщить("Укажите время для Даты окончания!",2);
		Отказ = Истина;
	КонецЕсли;
	Если Не Отказ Тогда 
		ДозаполнитьПоля();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДозаполнитьПоля()
	Если Запись.Пользователь.Пустая() Тогда 
		Запись.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	Если Запись.Статус = Перечисления.СтатусыЗаявок.ПустаяСсылка() Тогда 
		Запись.Статус = Перечисления.СтатусыЗаявок.Новый;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидОтсутствияПриИзменении(Элемент)
	УстановитьВидимостьПериода();
	Если Элемент <> Неопределено Тогда 
		ЗаполнитьСписокПодписантов();
	КонецЕсли;
	ПериодНачала_ПриИзменении(Элемент);
	ПериодОкончания_ПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ПериодНачала_ПриИзменении(Элемент)
	Вариант = ВернутьВариантПоказаДаты();
	ПредварительноеЗаполнениеПериодаОкончания(Вариант);
	Если Вариант = 1 Тогда 
		Если ЗначениеЗаполнено(Запись.ПериодОкончания) Тогда 
			Запись.ПериодОкончания = КонецДня(Запись.ПериодОкончания);
		КонецЕсли;
	ИначеЕсли Вариант = 2 Тогда 
		Если ЗначениеЗаполнено(Запись.ПериодНачала) Тогда 
			Запись.ПериодОкончания = Запись.ПериодНачала;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПериодОкончания_ПриИзменении(Элемент)
	Вариант = ВернутьВариантПоказаДаты();
	ПредварительноеЗаполнениеПериодаОкончания(Вариант);
	Если Вариант = 1 Тогда 
		Если ЗначениеЗаполнено(Запись.ПериодОкончания) Тогда 
			Запись.ПериодОкончания = КонецДня(Запись.ПериодОкончания);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПредварительноеЗаполнениеПериодаОкончания(Вариант)
	Если ЗначениеЗаполнено(Запись.ПериодНачала)
		И (Не ЗначениеЗаполнено(Запись.ПериодОкончания)	Или Запись.ПериодОкончания < Запись.ПериодНачала) Тогда 
		Запись.ПериодОкончания = Запись.ПериодНачала;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Попытка
	ВладелецФормы.Элементы.Список.Обновить();
	Исключение
	КонецПопытки;
КонецПроцедуры


