
&НаКлиенте
Процедура Подчинить(Команда)
	ТекЗап = Элементы.Список.ТекущиеДанные;
	Если ТекЗап <> Неопределено Тогда
		ВыбЗнач = Неопределено;
		ПоказатьВводЗначения(Новый ОписаниеОповещения("ПодчинитьЗавершение", ЭтотОбъект, Новый Структура("ТекЗап, ВыбЗнач", ТекЗап, ВыбЗнач)), ВыбЗнач,"Выберите нового владельца для "+СокрЛП(ТекЗап.Наименование),Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодчинитьЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	ТекЗап = ДополнительныеПараметры.ТекЗап;
	ВыбЗнач = ?(Значение = Неопределено, ДополнительныеПараметры.ВыбЗнач, Значение);	
	
	Если (Значение <> Неопределено) Тогда 
		УстановитьНовогоВладельца(ТекЗап.Email,ВыбЗнач);
		Элементы.Список.Обновить();
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьНовогоВладельца(АдресПочты,НовыйВладелец)
	НайдЭл = Сервер.НайтиПользователяПоРеквизиту("Email",АдресПочты);
	Если ЗначениеЗаполнено(НайдЭл) Тогда 
		Об = НайдЭл.ПолучитьОбъект();
		Об.Родитель = НовыйВладелец;
		Об.Записать();
	Иначе
		ВызватьИсключение "Не найден элемент по адресу "+АдресПочты;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Элементы.ВВидеДерева.Пометка = Сервер.ЕстьПрава("Кадровик") И Не Сервер.ЕстьПрава("ПолныеПрава") 
	//Элементы.Список.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;
	УстановитьОтбор();
	//УстановитьРежимОтображения();
КонецПроцедуры

&НаКлиенте 
Процедура УстановитьРежимОтображения()
	Элементы.Список.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;
	Если Элементы.ВВидеДерева.Пометка Тогда
		//Если Элементы.ТолькоСвои.Пометка Тогда 
		//	Элементы.Список.Отображение = ОтображениеТаблицы.ИерархическийСписок;
		//Иначе
			Элементы.Список.Отображение = ОтображениеТаблицы.Дерево;
		//КонецЕсли;
	Иначе
		Элементы.Список.Отображение = ОтображениеТаблицы.Список;
	КонецЕсли;
КонецПроцедуры
	
&НаКлиенте 
Процедура УстановитьОтбор()
	УстановитьРежимОтображения();
	//КакДерево = Элементы.ВВидеДерева.Пометка;
	//Если КакДерево Тогда 
	//	//Элементы.Список.Отображение = ОтображениеТаблицы.Дерево;
	//	Элементы.Список.Отображение = ОтображениеТаблицы.ИерархическийСписок;
	//Иначе
	//	Элементы.Список.Отображение = ОтображениеТаблицы.Список;
	//КонецЕсли;
	//Список.Отбор.Элементы.Получить(0).Использование = Элементы.ТолькоСотрудники.Пометка;//не пустой е-майл 
	//Список.Отбор.Элементы.Получить(1).Использование = Элементы.ТолькоСотрудники.Пометка;//не заполнена дата увольнения
	//ТекущийДомен = Сервер.ВернутьТекущийДоменПользователя();
	//Список.Отбор.Элементы.Получить(2).ПравоеЗначение = ТекущийДомен;
	//Список.Отбор.Элементы.Получить(2).Использование = (Элементы.ТолькоСвои.Пометка И ЗначениеЗаполнено(ТекущийДомен));//только свой или не пустой домен
	Список.Параметры.УстановитьЗначениеПараметра("ТолькоДействующие",Элементы.ТолькоСотрудники.Пометка);
	Список.Параметры.УстановитьЗначениеПараметра("Домен",?(Элементы.ТолькоСвои.Пометка,Сервер.ВернутьТекущийДоменПользователя(),""));
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ВВидеДерева(Команда)
	Элементы.ВВидеДерева.Пометка = Не Элементы.ВВидеДерева.Пометка;
	УстановитьРежимОтображения();
КонецПроцедуры

&НаКлиенте
Процедура ТолькоСотрудники(Команда)
	Элементы.ТолькоСотрудники.Пометка = Не Элементы.ТолькоСотрудники.Пометка;
	УстановитьОтбор();
	//УстановитьРежимОтображения();
КонецПроцедуры

&НаКлиенте
Процедура ТолькоСвои(Команда)
	Элементы.ТолькоСвои.Пометка = Не Элементы.ТолькоСвои.Пометка;
	УстановитьОтбор();
	//УстановитьРежимОтображения();
КонецПроцедуры
